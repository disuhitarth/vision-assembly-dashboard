version: '3.8'

services:
  # Development overrides
  postgres:
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: vision_db_dev
      POSTGRES_USER: vision_dev
      POSTGRES_PASSWORD: dev_password

  redis:
    ports:
      - "6379:6379"

  # Development API with hot reload
  api:
    build:
      context: ../apps/api
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      MODE: demo
      DATABASE_URL: postgresql://vision_dev:dev_password@postgres:5432/vision_db_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret-key
      
      # Demo settings for development
      DEMO_CYCLE_TIME: 500
      DEMO_FAULT_RATE: 0.05
      DEMO_DEFECT_RATE: 0.1
      
      # Enable detailed logging in dev
      LOG_LEVEL: debug
    volumes:
      - ../apps/api:/app
      - /app/node_modules
      - ../models:/app/models
    ports:
      - "4000:4000"
      - "9229:9229"  # Debug port
    command: npm run start:debug

  # Development frontend with hot reload
  web:
    build:
      context: ../apps/web
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_WS_URL: ws://localhost:4000
      NEXT_PUBLIC_MODE: demo
      FAST_REFRESH: true
    volumes:
      - ../apps/web:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    command: npm run dev

  # Development tools
  adminer:
    image: adminer:latest
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  # Redis Commander for Redis debugging
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI